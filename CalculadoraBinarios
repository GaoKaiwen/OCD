import java.util.Scanner;

class CalculadoraBinarios { 

	private static int[] binario;
	private static int[] arrAux;
	
	public static void main(String[] args) {
    		running();
  	}

  	public static void running() {
    		Scanner scan = new Scanner(System.in);
		
    		System.out.println("" +
		"Calculadora de binarios\n" +
    		"Escolha uma operacao:\n" +
    		"1 - Soma de binarios int\n" +
    		"2 - Subtracao de binarios int\n" +
    		"3 - Multiplicacao de binarios int\n" +
    		"4 - Divisao de binarios float\n" +
    		"5 - Soma de binarios float\n" +
    		"6 - Subtracao de binarios float\n" +
    		"7 - Multiplicacao de binarios float\n" +
    		"8 - Divisao de binarios float");
    
    		boolean entradaValida = false;
		int operacao = 0;
    		while(entradaValida = false) {
			operacao = scan.nextInt();
			if(operacao < 1 || operacao > 8) {
				System.out.println("Entrada invalida. Insira novamente.");
				entradaValida = false;
			}
			else entradaValida = true;
    		}
    
    		String num1 = "";
    		String num2 = "";
		int[] numero1 = null;
		int[] numero2 = null;
		int[] resultado = null;
		switch(operacao) {
			case 1: System.out.println("Somando dois binarios inteiros...");
				System.out.print("Digite o primeiro numero: ");
				num1 = scan.next();
				System.out.print("\nDigite o segundo numero: ");
				num2 = scan.next();
				numero1 = intToArray(num1);
				numero2 = intToArray(num2);
				resultado = somaDeInteiros(numero1, numero2);

			case 2: System.out.println("Subtraindo dois inteiros...");
				System.out.print("Digite o primeiro numero: ");
				num1 = scan.next();
				System.out.println("\nDigite o segundo numero: ");
				num2 = scan.next();
				numero1 = intToArray(num1);
				numero2 = intToArray(num2);
				resultado = subtracaoDeInteiros(numero1, numero2);

			case 3: System.out.println("Multiplicando dois inteiros...");
				System.out.print("Digite o primeiro numero: ");
				num1 = scan.next();
				System.out.println("\nDigite o segundo numero: ");
				num2 = scan.next();
				numero1 = intToArray(num1);
				numero2 = intToArray(num2);
				resultado = multiplicacaoDeInteiros(numero1, numero2);
				
			case 4: System.out.println("Dividindo dois inteiros...");
				System.out.print("Digite o primeiro numero: ");
				num1 = scan.next();
				System.out.println("\nDigite o segundo numero: ");
				num2 = scan.next();
				numero1 = intToArray(num1);
				numero2 = intToArray(num2);
				resultado = divisaoDeInteiros(numero1, numero2);
				
			case 5: System.out.println("Somando dois flutuantes...");
				System.out.print("Digite o primeiro numero: ");
				num1 = scan.next();
				System.out.println("\nDigite o segundo numero: ");
				num2 = scan.next();
				numero1 = floatToArray(num1);
				numero2 = floatToArray(num2);
				resultado = somaDeFloats(numero1, numero2);
				
			case 6: System.out.println("Subtraindo dois flutuantes...");
				System.out.print("Digite o primeiro numero: ");
				num1 = scan.next();
				System.out.println("\nDigite o segundo numero: ");
				num2 = scan.next();
				numero1 = floatToArray(num1);
				numero2 = floatToArray(num2);
				resultado = subtracaoDeFloats(numero1, numero2);
				
			case 7: System.out.println("Multiplicando dois flutuantes...");
				System.out.print("Digite o primeiro numero: ");
				num1 = scan.next();
				System.out.println("\nDigite o segundo numero: ");
				num2 = scan.next();
				numero1 = floatToArray(num1);
				numero2 = floatToArray(num2);
				resultado = multiplicacaoDeFloats(numero1, numero2);
				
			case 8: System.out.println("Dividindo dois flutuantes...");
				System.out.print("Digite o primeiro numero: ");
				num1 = scan.next();
				System.out.println("\nDigite o segundo numero: ");
				num2 = scan.next();
				numero1 = floatToArray(num1);
				numero2 = floatToArray(num2);
				resultado = divisaoDeFloats(numero1, numero2);
		}
		for(int i = 0; i < resultado.length; i++) {
			System.out.print("O resultado e " + resultado[i]);
		}
		System.out.println("\n");
  	}
  	
  	public static int[] intToArray(String numero) {  //Transforma uma string de um nÃºmero em arranjo
  		binario = null;
  		int decimal = Integer.parseInt(numero);
        	arrAux = null;
       		int i = 0;
		if(Integer.parseInt(numero) < 0) binario[0] = 1;
      		else binario[0] = 0;
        	while(decimal > 0) {
          		if(decimal%2 == 0) arrAux[i] = 0;
          		else arrAux[i] = 1;
          		decimal /= 2;
          		i++;
        	}
        	int j = arrAux.length - 1;
        	for(int k = 1; k <= arrAux.length; k++) {
          		binario[k] = arrAux[j];
          		j--;
        	}
        	return binario;
  	}

	public static int[] floatToArray(String numero) {
		
  	}

  	public static int[] IgualarAoMaiorInt(int[] a, int tamanhoArray) {
	  	int[] retorno = new int[tamanhoArray];
	
	  	int i;
	  	int j = retorno.length-1;
	  	for(i = a.length-1; i > 0; i--) {
	  		retorno[j] = a[i];
	  		j--;
	  	}
	  	retorno[0] = a[i];
	  	
	  	return retorno;
  	}
	
	public static int[] maiorFloat(int[] a, int tamanhoArray) {
	
	}

  	public static int[] somaDeInteiros(int[] a, int[] b) {
	  	
  	}
	
	public static int[] subtracaoDeInteiros(int[] a, int[] b) {
	
	}
	
	public static int[] multiplicacaoDeInteiros(int[] a, int[] b) {
	
	}
	
	public static int[] divisaoDeInteiros(int[] a, int[] c) {
	
	}
	
	public static int[] somaDeFloats(int[] a, int[] b) {
	  	
  	}
	
	public static int[] subtracaoDeFloats(int[] a, int[] b) {
	  	
  	}
	
	public static int[] multiplicacaoDeFloats(int[] a, int[] b) {
	  	
  	}
	
	public static int[] divisaoDeFloats(int[] a, int[] b) {
	  	
  	}
}
